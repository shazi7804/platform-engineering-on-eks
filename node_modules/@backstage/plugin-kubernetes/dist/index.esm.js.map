{"version":3,"file":"index.esm.js","sources":["../src/plugin.ts","../src/KubernetesContent.tsx","../src/Router.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n  KubernetesBackendClient,\n  kubernetesApiRef,\n  kubernetesProxyApiRef,\n  kubernetesAuthProvidersApiRef,\n  KubernetesAuthProviders,\n  KubernetesProxyClient,\n  kubernetesClusterLinkFormatterApiRef,\n  getDefaultFormatters,\n  KubernetesClusterLinkFormatter,\n  DEFAULT_FORMATTER_NAME,\n} from '@backstage/plugin-kubernetes-react';\nimport {\n  createApiFactory,\n  createPlugin,\n  createRouteRef,\n  discoveryApiRef,\n  identityApiRef,\n  gitlabAuthApiRef,\n  googleAuthApiRef,\n  microsoftAuthApiRef,\n  oktaAuthApiRef,\n  oneloginAuthApiRef,\n  createRoutableExtension,\n} from '@backstage/core-plugin-api';\n\nexport const rootCatalogKubernetesRouteRef = createRouteRef({\n  id: 'kubernetes',\n});\n\nexport const kubernetesPlugin = createPlugin({\n  id: 'kubernetes',\n  apis: [\n    createApiFactory({\n      api: kubernetesApiRef,\n      deps: {\n        discoveryApi: discoveryApiRef,\n        identityApi: identityApiRef,\n        kubernetesAuthProvidersApi: kubernetesAuthProvidersApiRef,\n      },\n      factory: ({ discoveryApi, identityApi, kubernetesAuthProvidersApi }) =>\n        new KubernetesBackendClient({\n          discoveryApi,\n          identityApi,\n          kubernetesAuthProvidersApi,\n        }),\n    }),\n    createApiFactory({\n      api: kubernetesProxyApiRef,\n      deps: {\n        kubernetesApi: kubernetesApiRef,\n      },\n      factory: ({ kubernetesApi }) =>\n        new KubernetesProxyClient({\n          kubernetesApi,\n        }),\n    }),\n    createApiFactory({\n      api: kubernetesAuthProvidersApiRef,\n      deps: {\n        gitlabAuthApi: gitlabAuthApiRef,\n        googleAuthApi: googleAuthApiRef,\n        microsoftAuthApi: microsoftAuthApiRef,\n        oktaAuthApi: oktaAuthApiRef,\n        oneloginAuthApi: oneloginAuthApiRef,\n      },\n      factory: ({\n        gitlabAuthApi,\n        googleAuthApi,\n        microsoftAuthApi,\n        oktaAuthApi,\n        oneloginAuthApi,\n      }) => {\n        const oidcProviders = {\n          gitlab: gitlabAuthApi,\n          google: googleAuthApi,\n          microsoft: microsoftAuthApi,\n          okta: oktaAuthApi,\n          onelogin: oneloginAuthApi,\n        };\n\n        return new KubernetesAuthProviders({\n          microsoftAuthApi,\n          googleAuthApi,\n          oidcProviders,\n        });\n      },\n    }),\n    createApiFactory({\n      api: kubernetesClusterLinkFormatterApiRef,\n      deps: { googleAuthApi: googleAuthApiRef },\n      factory: deps => {\n        const formatters = getDefaultFormatters(deps);\n        return new KubernetesClusterLinkFormatter({\n          formatters,\n          defaultFormatterName: DEFAULT_FORMATTER_NAME,\n        });\n      },\n    }),\n  ],\n  routes: {\n    entityContent: rootCatalogKubernetesRouteRef,\n  },\n});\n\n/**\n * Props of EntityKubernetesContent\n *\n * @public\n */\nexport type EntityKubernetesContentProps = {\n  /**\n   * Sets the refresh interval in milliseconds. The default value is 10000 (10 seconds)\n   */\n  refreshIntervalMs?: number;\n};\n\nexport const EntityKubernetesContent: (\n  props: EntityKubernetesContentProps,\n) => JSX.Element = kubernetesPlugin.provide(\n  createRoutableExtension({\n    name: 'EntityKubernetesContent',\n    component: () => import('./Router').then(m => m.Router),\n    mountPoint: rootCatalogKubernetesRouteRef,\n  }),\n);\n","/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Grid, Typography } from '@material-ui/core';\nimport { Entity } from '@backstage/catalog-model';\nimport {\n  ErrorPanel,\n  ErrorReporting,\n  Cluster,\n  useKubernetesObjects,\n  DetectedErrorsContext,\n} from '@backstage/plugin-kubernetes-react';\nimport {\n  DetectedError,\n  detectErrors,\n} from '@backstage/plugin-kubernetes-common';\nimport {\n  Content,\n  EmptyState,\n  Page,\n  Progress,\n} from '@backstage/core-components';\n\ntype KubernetesContentProps = {\n  entity: Entity;\n  refreshIntervalMs?: number;\n  children?: React.ReactNode;\n};\n\nexport const KubernetesContent = ({\n  entity,\n  refreshIntervalMs,\n}: KubernetesContentProps) => {\n  const { kubernetesObjects, error } = useKubernetesObjects(\n    entity,\n    refreshIntervalMs,\n  );\n\n  const clustersWithErrors =\n    kubernetesObjects?.items.filter(r => r.errors.length > 0) ?? [];\n\n  const detectedErrors =\n    kubernetesObjects !== undefined\n      ? detectErrors(kubernetesObjects)\n      : new Map<string, DetectedError[]>();\n\n  return (\n    <DetectedErrorsContext.Provider value={[...detectedErrors.values()].flat()}>\n      <Page themeId=\"tool\">\n        <Content>\n          {kubernetesObjects === undefined && error === undefined && (\n            <Progress />\n          )}\n\n          {/* errors retrieved from the kubernetes clusters */}\n          {clustersWithErrors.length > 0 && (\n            <Grid container spacing={3} direction=\"column\">\n              <Grid item>\n                <ErrorPanel\n                  entityName={entity.metadata.name}\n                  clustersWithErrors={clustersWithErrors}\n                />\n              </Grid>\n            </Grid>\n          )}\n\n          {/* other errors */}\n          {error !== undefined && (\n            <Grid container spacing={3} direction=\"column\">\n              <Grid item>\n                <ErrorPanel\n                  entityName={entity.metadata.name}\n                  errorMessage={error}\n                />\n              </Grid>\n            </Grid>\n          )}\n\n          {kubernetesObjects && (\n            <Grid container spacing={3} direction=\"column\">\n              <Grid item>\n                <ErrorReporting detectedErrors={detectedErrors} />\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h3\">Your Clusters</Typography>\n              </Grid>\n              <Grid item container>\n                {kubernetesObjects?.items.length <= 0 && (\n                  <Grid\n                    container\n                    justifyContent=\"space-around\"\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    spacing={2}\n                  >\n                    <Grid item xs={8}>\n                      <EmptyState\n                        missing=\"data\"\n                        title=\"No Kubernetes resources\"\n                        description={`No resources on any known clusters for ${entity.metadata.name}`}\n                      />\n                    </Grid>\n                  </Grid>\n                )}\n                {kubernetesObjects?.items.length > 0 &&\n                  kubernetesObjects?.items.map((item, i) => {\n                    const podsWithErrors = new Set<string>(\n                      detectedErrors\n                        .get(item.cluster.name)\n                        ?.filter(de => de.sourceRef.kind === 'Pod')\n                        .map(de => de.sourceRef.name),\n                    );\n\n                    return (\n                      <Grid item key={i} xs={12}>\n                        <Cluster\n                          clusterObjects={item}\n                          podsWithErrors={podsWithErrors}\n                        />\n                      </Grid>\n                    );\n                  })}\n              </Grid>\n            </Grid>\n          )}\n        </Content>\n      </Page>\n    </DetectedErrorsContext.Provider>\n  );\n};\n","/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Entity } from '@backstage/catalog-model';\nimport {\n  useEntity,\n  MissingAnnotationEmptyState,\n} from '@backstage/plugin-catalog-react';\nimport { Route, Routes } from 'react-router-dom';\nimport { KubernetesContent } from './KubernetesContent';\nimport { Button } from '@material-ui/core';\n\nconst KUBERNETES_ANNOTATION = 'backstage.io/kubernetes-id';\nconst KUBERNETES_LABEL_SELECTOR_QUERY_ANNOTATION =\n  'backstage.io/kubernetes-label-selector';\n\nexport const isKubernetesAvailable = (entity: Entity) =>\n  Boolean(entity.metadata.annotations?.[KUBERNETES_ANNOTATION]) ||\n  Boolean(\n    entity.metadata.annotations?.[KUBERNETES_LABEL_SELECTOR_QUERY_ANNOTATION],\n  );\n\nexport const Router = (props: { refreshIntervalMs?: number }) => {\n  const { entity } = useEntity();\n\n  const kubernetesAnnotationValue =\n    entity.metadata.annotations?.[KUBERNETES_ANNOTATION];\n\n  const kubernetesLabelSelectorQueryAnnotationValue =\n    entity.metadata.annotations?.[KUBERNETES_LABEL_SELECTOR_QUERY_ANNOTATION];\n\n  if (\n    kubernetesAnnotationValue ||\n    kubernetesLabelSelectorQueryAnnotationValue\n  ) {\n    return (\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            <KubernetesContent\n              entity={entity}\n              refreshIntervalMs={props.refreshIntervalMs}\n            />\n          }\n        />\n      </Routes>\n    );\n  }\n\n  return (\n    <>\n      <MissingAnnotationEmptyState annotation={KUBERNETES_ANNOTATION} />\n      <h1>\n        Or use a label selector query, which takes precedence over the previous\n        annotation.\n      </h1>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        href=\"https://backstage.io/docs/features/kubernetes/configuration#surfacing-your-kubernetes-components-as-part-of-an-entity\"\n      >\n        Read Kubernetes Plugin Docs\n      </Button>\n    </>\n  );\n};\n"],"names":["_a"],"mappings":"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"}